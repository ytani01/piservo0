# CalibApp: キーバインド設定の設計

## 概要

`CalibApp`クラスのキーバインドは、インスタンスメソッド `_setup_key_bindings` 内で辞書として定義され、インスタンス変数 `self.key_bindings` に格納される。
この設計は、コードの可読性、保守性、および技術的制約に基づいている。

## 設計に関する判断

### 1. `lambda` の要否

-   **引数付きメソッドの呼び出し**: `lambda` を使用する。
    -   **目的**: メソッドの実行を遅延させるため。`lambda` を使わない場合、辞書定義時にメソッドが即時実行され、その戻り値が格納されてしまう。
    -   **例**: `"w": lambda: self.move_diff(+20)`

-   **引数なしメソッドの呼び出し**: `lambda` は不要。
    -   **目的**: メソッドオブジェクトを直接格納できる。
    -   **例**: `"h": self.display_help`

### 2. `_setup_key_bindings` メソッドへの分離

キーバインドの辞書定義を `__init__` から分離し、独立したメソッドとする。

-   **目的**:
    -   `__init__` の責務を属性の初期化に限定し、可読性を高める (関心の分離)。
    -   キーバインドに関するコードの場所を明確にし、保守性を向上させる。

### 3. クラス変数として定義しない理由

キーバインドの辞書は、クラス変数として定義できない。

-   **理由**:
    -   辞書の定義にインスタンス自身を指す `self` が含まれるため。
    -   クラス変数はインスタンス生成前に評価されるため、`self` が未定義となり `NameError` が発生する。
    -   したがって、キーバインドの定義はインスタンス生成後に行う必要がある。
